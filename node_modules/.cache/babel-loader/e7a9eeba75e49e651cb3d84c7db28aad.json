{"remainingRequest":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Gruppi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Gruppi.vue","mtime":1640031866572},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/babel.config.js","mtime":1639855315044},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Wb2x1bWVzL0RBVEkvR0lUL1Byb2dldHRvLU1vZGVTZW0vY2xpZW50X21vZHNlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVm9sdW1lcy9EQVRJL0dJVC9Qcm9nZXR0by1Nb2RlU2VtL2NsaWVudF9tb2RzZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgQkNvbnRhaW5lciwgQlJvdywgQkNvbCB9IGZyb20gImJvb3RzdHJhcC12dWUiOwoKdmFyIFNwYXJxbENsaWVudCA9IHJlcXVpcmUoJ3NwYXJxbC1odHRwLWNsaWVudCcpOwoKdmFyIGVuZHBvaW50VXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NzIwMC9yZXBvc2l0b3JpZXMvTUVPJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJHcnVwcGkiLAogIGNvbXBvbmVudHM6IHsKICAgIC8vQkJ1dHRvbiwKICAgIEJDb250YWluZXI6IEJDb250YWluZXIsCiAgICBCUm93OiBCUm93LAogICAgQkNvbDogQkNvbAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFydGlzdFNlbGVjdGVkOiBudWxsLAogICAgICBhbGxHcm91cHM6IFtdLAogICAgICBncm91cHNMb2FkZWQ6IGZhbHNlLAogICAgICBncm91cENvbXBvbmVudHM6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHF1ZXJ5LCBjbGllbnQsIHN0cmVhbSwgc2VsZjsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHF1ZXJ5ID0gIlxuICAgICAgUFJFRklYIG1lbzogPGh0dHA6Ly93d3cubW9kc2VtLm9yZy9tdXNpY2FsRXZlbnRzT250b2xvZ3kjPlxuICAgICAgUFJFRklYIHJkZjogPGh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyM+XG4gICAgICBQUkVGSVggb3dsOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjPlxuICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPlxuICAgICAgUFJFRklYIHhzZDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIz5cblxuICAgICAgc2VsZWN0IGRpc3RpbmN0ID9ub21lR3J1cHBvXG4gICAgICB3aGVyZSB7XG4gICAgICAgID9hcnRpc3RhIHJkZjp0eXBlIG1lbzpHcnVwcG87XG4gICAgICAgIG1lbzpub21lQWdlbnRlTXVzaWNhbGUgP25vbWVHcnVwcG8uXG4gICAgICB9IGxpbWl0IDEwMFxuICAgICI7CiAgICAgICAgICAgICAgY2xpZW50ID0gbmV3IFNwYXJxbENsaWVudCh7CiAgICAgICAgICAgICAgICBlbmRwb2ludFVybDogZW5kcG9pbnRVcmwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gY2xpZW50LnF1ZXJ5LnNlbGVjdChxdWVyeSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgc3RyZWFtID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBzZWxmID0gX3RoaXM7CiAgICAgICAgICAgICAgc3RyZWFtLm9uKCdkYXRhJywgZnVuY3Rpb24gKHJvdykgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocm93KTsKICAgICAgICAgICAgICAgIE9iamVjdC5lbnRyaWVzKHJvdykuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSwKICAgICAgICAgICAgICAgICAgICAgIGtleSA9IF9yZWYyWzBdLAogICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTsKCiAgICAgICAgICAgICAgICAgIHZhciBhcnRpc3ROYW1lID0gdmFsdWUudmFsdWUucmVwbGFjZSgnaHR0cDovL3d3dy5tb2RzZW0ub3JnL211c2ljYWxFdmVudHNPbnRvbG9neSMnLCAnJyk7CiAgICAgICAgICAgICAgICAgIHNlbGYuYWxsR3JvdXBzLnB1c2goewogICAgICAgICAgICAgICAgICAgIHZhbHVlOiBhcnRpc3ROYW1lLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IGFydGlzdE5hbWUKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCIiLmNvbmNhdChrZXksICI6ICIpLmNvbmNhdCh2YWx1ZS52YWx1ZSwgIiAoIikuY29uY2F0KHZhbHVlLnRlcm1UeXBlLCAiKSIpKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgc2VsZi5ncm91cHNMb2FkZWQgPSB0cnVlOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHN0cmVhbS5vbignZXJyb3InLCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBmaW5kTGl2ZUV2ZW50czogZnVuY3Rpb24gZmluZExpdmVFdmVudHMoZ3JvdXBOYW1lKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHF1ZXJ5OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIuZ3JvdXBDb21wb25lbnRzID0gW107IC8vQ29zdHJ1aXNjbyBsYSBxdWVyeQoKICAgICAgICAgICAgICAgIHF1ZXJ5ID0gIlxuICAgICAgICBQUkVGSVggbWVvOiA8aHR0cDovL3d3dy5tb2RzZW0ub3JnL211c2ljYWxFdmVudHNPbnRvbG9neSM+XG4gICAgICAgIFBSRUZJWCByZGY6IDxodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjPlxuICAgICAgICBQUkVGSVggb3dsOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjPlxuICAgICAgICBQUkVGSVggcmRmczogPGh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDEvcmRmLXNjaGVtYSM+XG4gICAgICAgIFBSRUZJWCB4c2Q6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSM+XG5cbiAgICAgICAgc2VsZWN0IGRpc3RpbmN0ID9ub21lQXJ0aXN0YSA/bm9tZUdydXBwb1xuICAgICAgICB3aGVyZSB7XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgI2FydGlzdGkgY2hlIGZhbm5vIHBhcnRlIGRpIHVuYSBiYW5kXG4gICAgICAgICAgICAgICAgP2FydGlzdGEgcmRmOnR5cGUgbWVvOkFnZW50ZU11c2ljYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lQWdlbnRlTXVzaWNhbGUgP25vbWVBcnRpc3RhLlxuICAgICAgICAgICAgICAgID9ncnVwcG8gcmRmOnR5cGUgbWVvOkdydXBwbztcbiAgICAgICAgICAgICAgICAgICAgICBtZW86Zm9ybWF0YURhID9hcnRpc3RhO1xuICAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lQWdlbnRlTXVzaWNhbGUgP25vbWVHcnVwcG87XG4gICAgICAgICAgICAgICAgICAgICAgRklMVEVSIHJlZ2V4KD9ub21lR3J1cHBvLCBcIiIgKyBncm91cE5hbWUgKyAiXCIpLlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdW5pb25cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAjYXJ0aXN0aSBjaGUgZmFubm8gcGFydGUgZGkgdW4gZHVvXG4gICAgICAgICAgICAgICAgP2FydGlzdGEgcmRmOnR5cGUgbWVvOkFnZW50ZU11c2ljYWxlO1xuICAgICAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lQWdlbnRlTXVzaWNhbGUgP25vbWVBcnRpc3RhLlxuICAgICAgICAgICAgICAgID9ncnVwcG8gcmRmOnR5cGUgbWVvOkdydXBwbztcbiAgICAgICAgICAgICAgICAgICAgICBtZW86ZHVvRm9ybWF0b0RhID9hcnRpc3RhO1xuICAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lQWdlbnRlTXVzaWNhbGUgP25vbWVHcnVwcG87XG4gICAgICAgICAgICAgICAgICAgICAgRklMVEVSIHJlZ2V4KD9ub21lR3J1cHBvLCBcIiIgKyBncm91cE5hbWUgKyAiXCIpLlxuICAgICAgICAgICAgfVxuICAgICAgICB9IGxpbWl0IDEwMFxuICAgICI7IC8vQ2hpYW1vIGlsIG1ldG9kbyBjaGUgZXNlZ3VlIGxhIHF1ZXJ5OiBzaXR1YXRvIG5lbCBjb21wb25lbnQgcHJpbmNpcGFsZQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJHJvb3QuJHJlZnMuSGVsbG9Xb3JsZC5tYWtlUXVlcnkocXVlcnkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBfdGhpczIuZ3JvdXBDb21wb25lbnRzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Gruppi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,UAAA,EAAA,IAAA,EAAA,IAAA,QAAA,eAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,wCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAGA,EAAA,UAAA,EAAA;AACA;AACA,IAAA,UAAA,EAAA,UAFA;AAEA,IAAA,IAAA,EAAA,IAFA;AAEA,IAAA,IAAA,EAAA;AAFA,GAHA;AAQA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,KAHA;AAIA,MAAA,eAAA,EAAA;AAJA,KAAA;AAMA,GAfA;AAiBA,EAAA,OAjBA,qBAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,cAAA,KAFA;AAgBA,cAAA,MAhBA,GAgBA,IAAA,YAAA,CAAA;AAAA,gBAAA,WAAA,EAAA;AAAA,eAAA,CAhBA;AAAA;AAAA,qBAiBA,MAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAjBA;;AAAA;AAiBA,cAAA,MAjBA;AAmBA,cAAA,IAnBA,GAmBA,KAnBA;AAqBA,cAAA,MAAA,CAAA,EAAA,CAAA,MAAA,EAAA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,EAAA,OAAA,CAAA,gBAAA;AAAA;AAAA,sBAAA,GAAA;AAAA,sBAAA,KAAA;;AAEA,sBAAA,UAAA,GAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,8CAAA,EAAA,EAAA,CAAA;AAEA,kBAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AAAA,oBAAA,KAAA,EAAA,UAAA;AAAA,oBAAA,IAAA,EAAA;AAAA,mBAAA;AAEA,kBAAA,OAAA,CAAA,GAAA,WAAA,GAAA,eAAA,KAAA,CAAA,KAAA,eAAA,KAAA,CAAA,QAAA;AACA,iBAPA;AASA,gBAAA,IAAA,CAAA,YAAA,GAAA,IAAA;AACA,eAZA;AAcA,cAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,UAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,KAAA,CAAA,GAAA;AACA,eAFA;;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA,GAvDA;AAyDA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,SADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,eAAA,GAAA,EAAA,CADA,CAGA;;AACA,gBAAA,KAJA,GAIA,qwBAgBA,SAhBA,sbA0BA,SA1BA,mDAJA,EAmCA;;AAnCA;AAAA,uBAoCA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,CAAA,KAAA,CApCA;;AAAA;AAoCA,gBAAA,MAAA,CAAA,eApCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAtCA;AAzDA,CAAA","sourcesContent":["<template>\n  <div class=\"m-3\">\n    <div v-if=\"groupsLoaded\">\n      <!--\n      <b-form-select v-model=\"artistSelected\" :options=\"allGroups\"></b-form-select>\n      <div class=\"mt-3\">Selected: <strong>{{ artistSelected }}</strong></div>\n      <div>\n        <b-button variant=\"primary\" @click=\"findLiveEvents()\">Trova eventi Live dell'artista</b-button>\n      </div>-->\n      <h3>Componenti dei gruppi</h3>\n\n\n      <b-container class=\"bv-example-row\">\n        <b-row class=\"text-center\">\n          <b-col cols=\"3\">\n            <b-list-group>\n              <b-list-group-item v-for=\"(elem, index) in allGroups\" :key=\"index\" @click=\"findLiveEvents(elem.value)\" button>{{ elem.value }}</b-list-group-item>\n            </b-list-group>\n          </b-col>\n          <b-col cols=\"9\">\n            <div v-if=\"groupComponents.length > 0\">\n            <b-table striped hover :items=\"groupComponents\"></b-table>\n            </div>\n            <div v-else>\n              <h5>Il gruppo non ha nessun componente</h5>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {BContainer, BRow, BCol} from \"bootstrap-vue\";\n\nconst SparqlClient = require('sparql-http-client')\nconst endpointUrl = 'http://localhost:7200/repositories/MEO'\n\nexport default {\n  name: \"Gruppi\",\n\n  components: {\n    //BButton,\n    BContainer, BRow, BCol\n  },\n\n  data: function () {\n    return {\n      artistSelected: null,\n      allGroups: [],\n      groupsLoaded: false,\n      groupComponents: [],\n    }\n  },\n\n  async mounted() {\n\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select distinct ?nomeGruppo\n      where {\n        ?artista rdf:type meo:Gruppo;\n        meo:nomeAgenteMusicale ?nomeGruppo.\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    var self = this;\n\n    stream.on('data', row => {\n      console.log(row);\n      Object.entries(row).forEach(([key, value]) => {\n\n        var artistName = value.value.replace('http://www.modsem.org/musicalEventsOntology#', '');\n\n        self.allGroups.push({value: artistName, text: artistName});\n\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n\n      self.groupsLoaded = true;\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    async findLiveEvents(groupName) {\n      this.groupComponents = [];\n\n      //Costruisco la query\n      const query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n        select distinct ?nomeArtista ?nomeGruppo\n        where {\n            {\n                #artisti che fanno parte di una band\n                ?artista rdf:type meo:AgenteMusicale;\n                         meo:nomeAgenteMusicale ?nomeArtista.\n                ?gruppo rdf:type meo:Gruppo;\n                      meo:formataDa ?artista;\n                      meo:nomeAgenteMusicale ?nomeGruppo;\n                      FILTER regex(?nomeGruppo, \"` + groupName + `\").\n            }\n            union\n            {\n                #artisti che fanno parte di un duo\n                ?artista rdf:type meo:AgenteMusicale;\n                         meo:nomeAgenteMusicale ?nomeArtista.\n                ?gruppo rdf:type meo:Gruppo;\n                      meo:duoFormatoDa ?artista;\n                      meo:nomeAgenteMusicale ?nomeGruppo;\n                      FILTER regex(?nomeGruppo, \"` + groupName + `\").\n            }\n        } limit 100\n    `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.groupComponents = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}