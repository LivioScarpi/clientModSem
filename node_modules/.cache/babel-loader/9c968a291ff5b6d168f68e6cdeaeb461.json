{"remainingRequest":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Città.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Città.vue","mtime":1640031903377},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/babel.config.js","mtime":1639855315044},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Città.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"m-3\">\n    <div v-if=\"groupsLoaded\">\n      <!--\n      <b-form-select v-model=\"artistSelected\" :options=\"allGroups\"></b-form-select>\n      <div class=\"mt-3\">Selected: <strong>{{ artistSelected }}</strong></div>\n      <div>\n        <b-button variant=\"primary\" @click=\"findLiveEvents()\">Trova eventi Live dell'artista</b-button>\n      </div>-->\n      <h3>Eventi nelle città</h3>\n\n      <b-container class=\"bv-example-row\">\n        <b-row class=\"text-center\">\n          <b-col cols=\"3\">\n            <b-list-group>\n              <b-list-group-item v-for=\"(elem, index) in allGroups\" :key=\"index\" @click=\"callQueryMethods(elem.value)\" button>{{ elem.value }}</b-list-group-item>\n            </b-list-group>\n          </b-col>\n          <b-col cols=\"9\">\n\n            <h4>informazioni sulla città: WikiData</h4>\n            <div v-if=\"cityInfo.length > 0\">\n              <b-table striped hover :items=\"cityInfo\"></b-table>\n            </div>\n            <div v-else>\n              <h5>Non ci sono informazioni su questa città</h5>\n            </div>\n\n            <h4>Eventi tenuti in questa città</h4>\n            <div v-if=\"groupComponents.length > 0\">\n            <b-table striped hover :items=\"groupComponents\"></b-table>\n            </div>\n            <div v-else>\n              <h5>In questa città non ci sono stati eventi</h5>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {BContainer, BRow, BCol} from \"bootstrap-vue\";\n\nconst SparqlClient = require('sparql-http-client')\nconst endpointUrl = 'http://localhost:7200/repositories/MEO'\n\nexport default {\n  name: \"Città\",\n\n  components: {\n    //BButton,\n    BContainer, BRow, BCol\n  },\n\n  data: function () {\n    return {\n      artistSelected: null,\n      allGroups: [],\n      groupsLoaded: false,\n      groupComponents: [],\n      cityInfo: [],\n    }\n  },\n\n  async mounted() {\n\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select distinct ?nomeCittà\n      where {\n        ?città rdf:type meo:Città;\n        meo:nomeCittà ?nomeCittà.\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    var self = this;\n\n    stream.on('data', row => {\n      console.log(row);\n      Object.entries(row).forEach(([key, value]) => {\n\n        var artistName = value.value.replace('http://www.modsem.org/musicalEventsOntology#', '');\n\n        self.allGroups.push({value: artistName, text: artistName});\n\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n\n      self.groupsLoaded = true;\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    callQueryMethods(songName) {\n      this.findCityInfo(songName);\n      this.findLiveEvents(songName);\n    },\n    async findLiveEvents(cityName) {\n      this.groupComponents = [];\n\n      //Costruisco la query\n      const query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n        select ?nomeEvento ?nomeStruttura ?nomeCittà\n        where {\n            ?città rdf:type meo:Città;\n            meo:nomeCittà ?nomeCittà.\n            FILTER regex(?nomeCittà, \"` + cityName + `\").\n          ?struttura rdf:type meo:StrutturaMusicale;\n            meo:strutturaCollocataInCittà ?città;\n            meo:nomeStruttura ?nomeStruttura.\n          ?evento rdf:type meo:EventoMusicale;\n            meo:eventoInStruttura ?struttura;\n            meo:nomeEventoMusicale ?nomeEvento.\n        } limit 100\n    `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.groupComponents = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n\n    async findCityInfo(cityName) {\n      this.cityInfo = [];\n\n      //Costruisco la query\n      const query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n        PREFIX       wdt:  <http://www.wikidata.org/prop/direct/>\n        PREFIX        wd:  <http://www.wikidata.org/entity/>\n        PREFIX  wikibase:  <http://wikiba.se/ontology#>\n        PREFIX        bd:  <http://www.bigdata.com/rdf#>\n\n        select ?nomeCittà ?abbreviazione ?popolazione ?codicePostale\n        where {\n                    ?città rdf:type meo:Città;\n                     meo:nomeCittà ?nomeCittà.\n            FILTER regex(?nomeCittà, \"` + cityName+ `\").\n            service <https://query.wikidata.org/sparql> {\n                ?città wdt:P281 ?codicePostale;\n                       wdt:P395 ?abbreviazione;\n                       wdt:P1082 ?popolazione.\n                SERVICE wikibase:label {\n                    bd:serviceParam wikibase:language \"it\".\n                    ?codicePostale rdfs:label ?postalCodelabel.\n                    ?abbreviazione rdfs:label ?abbreviazionelabel.\n                    ?popolazione rdfs:label ?popolazione\n                }\n            }\n        } limit 1\n    `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.cityInfo = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}