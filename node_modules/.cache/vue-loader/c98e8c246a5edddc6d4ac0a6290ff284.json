{"remainingRequest":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Città.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Città.vue","mtime":1640031903377},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7QkNvbnRhaW5lciwgQlJvdywgQkNvbH0gZnJvbSAiYm9vdHN0cmFwLXZ1ZSI7Cgpjb25zdCBTcGFycWxDbGllbnQgPSByZXF1aXJlKCdzcGFycWwtaHR0cC1jbGllbnQnKQpjb25zdCBlbmRwb2ludFVybCA9ICdodHRwOi8vbG9jYWxob3N0OjcyMDAvcmVwb3NpdG9yaWVzL01FTycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQ2l0dMOgIiwKCiAgY29tcG9uZW50czogewogICAgLy9CQnV0dG9uLAogICAgQkNvbnRhaW5lciwgQlJvdywgQkNvbAogIH0sCgogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGFydGlzdFNlbGVjdGVkOiBudWxsLAogICAgICBhbGxHcm91cHM6IFtdLAogICAgICBncm91cHNMb2FkZWQ6IGZhbHNlLAogICAgICBncm91cENvbXBvbmVudHM6IFtdLAogICAgICBjaXR5SW5mbzogW10sCiAgICB9CiAgfSwKCiAgYXN5bmMgbW91bnRlZCgpIHsKCiAgICBjb25zdCBxdWVyeSA9IGAKICAgICAgUFJFRklYIG1lbzogPGh0dHA6Ly93d3cubW9kc2VtLm9yZy9tdXNpY2FsRXZlbnRzT250b2xvZ3kjPgogICAgICBQUkVGSVggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4KICAgICAgUFJFRklYIG93bDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsIz4KICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPgogICAgICBQUkVGSVggeHNkOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjPgoKICAgICAgc2VsZWN0IGRpc3RpbmN0ID9ub21lQ2l0dMOgCiAgICAgIHdoZXJlIHsKICAgICAgICA/Y2l0dMOgIHJkZjp0eXBlIG1lbzpDaXR0w6A7CiAgICAgICAgbWVvOm5vbWVDaXR0w6AgP25vbWVDaXR0w6AuCiAgICAgIH0gbGltaXQgMTAwCiAgICBgOwoKICAgIGNvbnN0IGNsaWVudCA9IG5ldyBTcGFycWxDbGllbnQoe2VuZHBvaW50VXJsfSkKICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IGNsaWVudC5xdWVyeS5zZWxlY3QocXVlcnkpCgogICAgdmFyIHNlbGYgPSB0aGlzOwoKICAgIHN0cmVhbS5vbignZGF0YScsIHJvdyA9PiB7CiAgICAgIGNvbnNvbGUubG9nKHJvdyk7CiAgICAgIE9iamVjdC5lbnRyaWVzKHJvdykuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7CgogICAgICAgIHZhciBhcnRpc3ROYW1lID0gdmFsdWUudmFsdWUucmVwbGFjZSgnaHR0cDovL3d3dy5tb2RzZW0ub3JnL211c2ljYWxFdmVudHNPbnRvbG9neSMnLCAnJyk7CgogICAgICAgIHNlbGYuYWxsR3JvdXBzLnB1c2goe3ZhbHVlOiBhcnRpc3ROYW1lLCB0ZXh0OiBhcnRpc3ROYW1lfSk7CgogICAgICAgIGNvbnNvbGUubG9nKGAke2tleX06ICR7dmFsdWUudmFsdWV9ICgke3ZhbHVlLnRlcm1UeXBlfSlgKQogICAgICB9KQoKICAgICAgc2VsZi5ncm91cHNMb2FkZWQgPSB0cnVlOwogICAgfSkKCiAgICBzdHJlYW0ub24oJ2Vycm9yJywgZXJyID0+IHsKICAgICAgY29uc29sZS5lcnJvcihlcnIpCiAgICB9KQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGNhbGxRdWVyeU1ldGhvZHMoc29uZ05hbWUpIHsKICAgICAgdGhpcy5maW5kQ2l0eUluZm8oc29uZ05hbWUpOwogICAgICB0aGlzLmZpbmRMaXZlRXZlbnRzKHNvbmdOYW1lKTsKICAgIH0sCiAgICBhc3luYyBmaW5kTGl2ZUV2ZW50cyhjaXR5TmFtZSkgewogICAgICB0aGlzLmdyb3VwQ29tcG9uZW50cyA9IFtdOwoKICAgICAgLy9Db3N0cnVpc2NvIGxhIHF1ZXJ5CiAgICAgIGNvbnN0IHF1ZXJ5ID0gYAogICAgICAgIFBSRUZJWCBtZW86IDxodHRwOi8vd3d3Lm1vZHNlbS5vcmcvbXVzaWNhbEV2ZW50c09udG9sb2d5Iz4KICAgICAgICBQUkVGSVggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4KICAgICAgICBQUkVGSVggb3dsOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMi8wNy9vd2wjPgogICAgICAgIFBSRUZJWCByZGZzOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMC8wMS9yZGYtc2NoZW1hIz4KICAgICAgICBQUkVGSVggeHNkOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjPgoKICAgICAgICBzZWxlY3QgP25vbWVFdmVudG8gP25vbWVTdHJ1dHR1cmEgP25vbWVDaXR0w6AKICAgICAgICB3aGVyZSB7CiAgICAgICAgICAgID9jaXR0w6AgcmRmOnR5cGUgbWVvOkNpdHTDoDsKICAgICAgICAgICAgbWVvOm5vbWVDaXR0w6AgP25vbWVDaXR0w6AuCiAgICAgICAgICAgIEZJTFRFUiByZWdleCg/bm9tZUNpdHTDoCwgImAgKyBjaXR5TmFtZSArIGAiKS4KICAgICAgICAgID9zdHJ1dHR1cmEgcmRmOnR5cGUgbWVvOlN0cnV0dHVyYU11c2ljYWxlOwogICAgICAgICAgICBtZW86c3RydXR0dXJhQ29sbG9jYXRhSW5DaXR0w6AgP2NpdHTDoDsKICAgICAgICAgICAgbWVvOm5vbWVTdHJ1dHR1cmEgP25vbWVTdHJ1dHR1cmEuCiAgICAgICAgICA/ZXZlbnRvIHJkZjp0eXBlIG1lbzpFdmVudG9NdXNpY2FsZTsKICAgICAgICAgICAgbWVvOmV2ZW50b0luU3RydXR0dXJhID9zdHJ1dHR1cmE7CiAgICAgICAgICAgIG1lbzpub21lRXZlbnRvTXVzaWNhbGUgP25vbWVFdmVudG8uCiAgICAgICAgfSBsaW1pdCAxMDAKICAgIGA7CgogICAgICAvL0NoaWFtbyBpbCBtZXRvZG8gY2hlIGVzZWd1ZSBsYSBxdWVyeTogc2l0dWF0byBuZWwgY29tcG9uZW50IHByaW5jaXBhbGUKICAgICAgdGhpcy5ncm91cENvbXBvbmVudHMgPSBhd2FpdCB0aGlzLiRyb290LiRyZWZzLkhlbGxvV29ybGQubWFrZVF1ZXJ5KHF1ZXJ5KTsKICAgIH0sCgogICAgYXN5bmMgZmluZENpdHlJbmZvKGNpdHlOYW1lKSB7CiAgICAgIHRoaXMuY2l0eUluZm8gPSBbXTsKCiAgICAgIC8vQ29zdHJ1aXNjbyBsYSBxdWVyeQogICAgICBjb25zdCBxdWVyeSA9IGAKICAgICAgICBQUkVGSVggbWVvOiA8aHR0cDovL3d3dy5tb2RzZW0ub3JnL211c2ljYWxFdmVudHNPbnRvbG9neSM+CiAgICAgICAgUFJFRklYIHJkZjogPGh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyM+CiAgICAgICAgUFJFRklYIG93bDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsIz4KICAgICAgICBQUkVGSVggcmRmczogPGh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDEvcmRmLXNjaGVtYSM+CiAgICAgICAgUFJFRklYIHhzZDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIz4KICAgICAgICBQUkVGSVggICAgICAgd2R0OiAgPGh0dHA6Ly93d3cud2lraWRhdGEub3JnL3Byb3AvZGlyZWN0Lz4KICAgICAgICBQUkVGSVggICAgICAgIHdkOiAgPGh0dHA6Ly93d3cud2lraWRhdGEub3JnL2VudGl0eS8+CiAgICAgICAgUFJFRklYICB3aWtpYmFzZTogIDxodHRwOi8vd2lraWJhLnNlL29udG9sb2d5Iz4KICAgICAgICBQUkVGSVggICAgICAgIGJkOiAgPGh0dHA6Ly93d3cuYmlnZGF0YS5jb20vcmRmIz4KCiAgICAgICAgc2VsZWN0ID9ub21lQ2l0dMOgID9hYmJyZXZpYXppb25lID9wb3BvbGF6aW9uZSA/Y29kaWNlUG9zdGFsZQogICAgICAgIHdoZXJlIHsKICAgICAgICAgICAgICAgICAgICA/Y2l0dMOgIHJkZjp0eXBlIG1lbzpDaXR0w6A7CiAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lQ2l0dMOgID9ub21lQ2l0dMOgLgogICAgICAgICAgICBGSUxURVIgcmVnZXgoP25vbWVDaXR0w6AsICJgICsgY2l0eU5hbWUrIGAiKS4KICAgICAgICAgICAgc2VydmljZSA8aHR0cHM6Ly9xdWVyeS53aWtpZGF0YS5vcmcvc3BhcnFsPiB7CiAgICAgICAgICAgICAgICA/Y2l0dMOgIHdkdDpQMjgxID9jb2RpY2VQb3N0YWxlOwogICAgICAgICAgICAgICAgICAgICAgIHdkdDpQMzk1ID9hYmJyZXZpYXppb25lOwogICAgICAgICAgICAgICAgICAgICAgIHdkdDpQMTA4MiA/cG9wb2xhemlvbmUuCiAgICAgICAgICAgICAgICBTRVJWSUNFIHdpa2liYXNlOmxhYmVsIHsKICAgICAgICAgICAgICAgICAgICBiZDpzZXJ2aWNlUGFyYW0gd2lraWJhc2U6bGFuZ3VhZ2UgIml0Ii4KICAgICAgICAgICAgICAgICAgICA/Y29kaWNlUG9zdGFsZSByZGZzOmxhYmVsID9wb3N0YWxDb2RlbGFiZWwuCiAgICAgICAgICAgICAgICAgICAgP2FiYnJldmlhemlvbmUgcmRmczpsYWJlbCA/YWJicmV2aWF6aW9uZWxhYmVsLgogICAgICAgICAgICAgICAgICAgID9wb3BvbGF6aW9uZSByZGZzOmxhYmVsID9wb3BvbGF6aW9uZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSBsaW1pdCAxCiAgICBgOwoKICAgICAgLy9DaGlhbW8gaWwgbWV0b2RvIGNoZSBlc2VndWUgbGEgcXVlcnk6IHNpdHVhdG8gbmVsIGNvbXBvbmVudCBwcmluY2lwYWxlCiAgICAgIHRoaXMuY2l0eUluZm8gPSBhd2FpdCB0aGlzLiRyb290LiRyZWZzLkhlbGxvV29ybGQubWFrZVF1ZXJ5KHF1ZXJ5KTsKICAgIH0sCiAgfQp9Cgo="},{"version":3,"sources":["Città.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Città.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"m-3\">\n    <div v-if=\"groupsLoaded\">\n      <!--\n      <b-form-select v-model=\"artistSelected\" :options=\"allGroups\"></b-form-select>\n      <div class=\"mt-3\">Selected: <strong>{{ artistSelected }}</strong></div>\n      <div>\n        <b-button variant=\"primary\" @click=\"findLiveEvents()\">Trova eventi Live dell'artista</b-button>\n      </div>-->\n      <h3>Eventi nelle città</h3>\n\n      <b-container class=\"bv-example-row\">\n        <b-row class=\"text-center\">\n          <b-col cols=\"3\">\n            <b-list-group>\n              <b-list-group-item v-for=\"(elem, index) in allGroups\" :key=\"index\" @click=\"callQueryMethods(elem.value)\" button>{{ elem.value }}</b-list-group-item>\n            </b-list-group>\n          </b-col>\n          <b-col cols=\"9\">\n\n            <h4>informazioni sulla città: WikiData</h4>\n            <div v-if=\"cityInfo.length > 0\">\n              <b-table striped hover :items=\"cityInfo\"></b-table>\n            </div>\n            <div v-else>\n              <h5>Non ci sono informazioni su questa città</h5>\n            </div>\n\n            <h4>Eventi tenuti in questa città</h4>\n            <div v-if=\"groupComponents.length > 0\">\n            <b-table striped hover :items=\"groupComponents\"></b-table>\n            </div>\n            <div v-else>\n              <h5>In questa città non ci sono stati eventi</h5>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {BContainer, BRow, BCol} from \"bootstrap-vue\";\n\nconst SparqlClient = require('sparql-http-client')\nconst endpointUrl = 'http://localhost:7200/repositories/MEO'\n\nexport default {\n  name: \"Città\",\n\n  components: {\n    //BButton,\n    BContainer, BRow, BCol\n  },\n\n  data: function () {\n    return {\n      artistSelected: null,\n      allGroups: [],\n      groupsLoaded: false,\n      groupComponents: [],\n      cityInfo: [],\n    }\n  },\n\n  async mounted() {\n\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select distinct ?nomeCittà\n      where {\n        ?città rdf:type meo:Città;\n        meo:nomeCittà ?nomeCittà.\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    var self = this;\n\n    stream.on('data', row => {\n      console.log(row);\n      Object.entries(row).forEach(([key, value]) => {\n\n        var artistName = value.value.replace('http://www.modsem.org/musicalEventsOntology#', '');\n\n        self.allGroups.push({value: artistName, text: artistName});\n\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n\n      self.groupsLoaded = true;\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    callQueryMethods(songName) {\n      this.findCityInfo(songName);\n      this.findLiveEvents(songName);\n    },\n    async findLiveEvents(cityName) {\n      this.groupComponents = [];\n\n      //Costruisco la query\n      const query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n        select ?nomeEvento ?nomeStruttura ?nomeCittà\n        where {\n            ?città rdf:type meo:Città;\n            meo:nomeCittà ?nomeCittà.\n            FILTER regex(?nomeCittà, \"` + cityName + `\").\n          ?struttura rdf:type meo:StrutturaMusicale;\n            meo:strutturaCollocataInCittà ?città;\n            meo:nomeStruttura ?nomeStruttura.\n          ?evento rdf:type meo:EventoMusicale;\n            meo:eventoInStruttura ?struttura;\n            meo:nomeEventoMusicale ?nomeEvento.\n        } limit 100\n    `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.groupComponents = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n\n    async findCityInfo(cityName) {\n      this.cityInfo = [];\n\n      //Costruisco la query\n      const query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n        PREFIX       wdt:  <http://www.wikidata.org/prop/direct/>\n        PREFIX        wd:  <http://www.wikidata.org/entity/>\n        PREFIX  wikibase:  <http://wikiba.se/ontology#>\n        PREFIX        bd:  <http://www.bigdata.com/rdf#>\n\n        select ?nomeCittà ?abbreviazione ?popolazione ?codicePostale\n        where {\n                    ?città rdf:type meo:Città;\n                     meo:nomeCittà ?nomeCittà.\n            FILTER regex(?nomeCittà, \"` + cityName+ `\").\n            service <https://query.wikidata.org/sparql> {\n                ?città wdt:P281 ?codicePostale;\n                       wdt:P395 ?abbreviazione;\n                       wdt:P1082 ?popolazione.\n                SERVICE wikibase:label {\n                    bd:serviceParam wikibase:language \"it\".\n                    ?codicePostale rdfs:label ?postalCodelabel.\n                    ?abbreviazione rdfs:label ?abbreviazionelabel.\n                    ?popolazione rdfs:label ?popolazione\n                }\n            }\n        } limit 1\n    `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.cityInfo = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]}]}