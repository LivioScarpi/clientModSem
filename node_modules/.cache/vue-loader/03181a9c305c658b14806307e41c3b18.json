{"remainingRequest":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/PaginaArtisti.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/PaginaArtisti.vue","mtime":1640031879445},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PaginaArtisti.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"PaginaArtisti.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"m-3\">\n    <div v-if=\"artistsLoaded\">\n      <!--\n      <b-form-select v-model=\"artistSelected\" :options=\"allArtists\"></b-form-select>\n      <div class=\"mt-3\">Selected: <strong>{{ artistSelected }}</strong></div>\n      <div>\n        <b-button variant=\"primary\" @click=\"findLiveEvents()\">Trova eventi Live dell'artista</b-button>\n      </div>-->\n      <h3>Eventi live degli artisti</h3>\n\n\n      <b-container class=\"bv-example-row mt-5\">\n        <b-row class=\"text-center\">\n          <b-col cols=\"3\">\n            <b-list-group>\n              <b-list-group-item v-for=\"(elem, index) in allArtists\" :key=\"index\" @click=\"callQueryMethods(elem.value)\"\n                                 button>{{ elem.value }}\n              </b-list-group-item>\n            </b-list-group>\n          </b-col>\n          <b-col cols=\"9\">\n            <div class=\"pb-5\">\n              <h4>Genere/i musicale/i dell'artista</h4>\n              <div v-if=\"genres.length > 0\">\n                <b-table striped hover :items=\"genres\"></b-table>\n              </div>\n              <div v-else>\n                <h5>NOTA</h5>\n              </div>\n            </div>\n\n            <div class=\"pb-5\">\n              <h4>Etichetta musicale dell'artista</h4>\n              <div v-if=\"labels.length > 0\">\n                <b-table striped hover :items=\"labels\"></b-table>\n              </div>\n              <div v-else>\n                <h5>NOTA</h5>\n              </div>\n            </div>\n\n            <div class=\"pb-5\">\n              <h4>Eventi in cui l'artista ha partecipato: MusicalEventsOntology</h4>\n              <div v-if=\"artistsevents.length > 0\">\n                <b-table striped hover :items=\"artistsevents\"></b-table>\n              </div>\n              <div v-else>\n                <h5>L'artista non ha partecipato a nessun evento</h5>\n              </div>\n            </div>\n\n            <div class=\"pb-5\">\n              <h4>Eventi in cui l'artista ha partecipato: WikiData</h4>\n              <div v-if=\"artistseventswd.length > 0\">\n                <b-table striped hover :items=\"artistseventswd\"></b-table>\n              </div>\n              <div v-else>\n                <h5>L'artista non ha partecipato a nessun evento secondo WikiData</h5>\n              </div>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {BContainer, BRow, BCol} from \"bootstrap-vue\";\n\nconst SparqlClient = require('sparql-http-client')\nconst endpointUrl = 'http://localhost:7200/repositories/MEO'\n\nexport default {\n  name: \"PaginaArtisti\",\n\n  components: {\n    //BButton,\n    BContainer, BRow, BCol\n  },\n\n  data: function () {\n    return {\n      artistSelected: null,\n      allArtists: [],\n      artistsLoaded: false,\n      allLoaded: false,\n      artistsevents: [],\n      genreandlabels: [],\n      genres: [],\n      labels: [],\n      artistseventswd: [], //eventi dell'artista recuperati da wikidata\n    }\n  },\n\n  async mounted() {\n\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select distinct ?nomeArtista\n      where {\n        ?artista rdf:type meo:AgenteMusicale;\n        meo:nomeAgenteMusicale ?nomeArtista.\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    var self = this;\n\n    stream.on('data', row => {\n      console.log(row);\n      Object.entries(row).forEach(([key, value]) => {\n\n        var artistName = value.value.replace('http://www.modsem.org/musicalEventsOntology#', '');\n\n        self.allArtists.push({value: artistName, text: artistName});\n\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n\n      self.artistsLoaded = true;\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    callQueryMethods(songName) {\n      this.findLiveEvents(songName);\n      this.findGenreAndLabel(songName);\n      this.findLiveEventsWD(songName);\n    },\n    async findLiveEvents(artistName) {\n      this.artistsevents = [];\n\n      //Costruisco la query\n      const query = `\nPREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nselect distinct ?artista ?evento ?nomeEvento ?dataEvento ?capienzaMassimaEvento ?strutturaEvento\nwhere {\n    {\n    ?artista rdf:type meo:AgenteMusicale;\n             meo:nomeAgenteMusicale ?nomeArtista.\n    FILTER regex(?nomeArtista, \"` + artistName + `\").\n    ?evento rdf:type meo:EventoMusicale;\n            meo:nomeEventoMusicale ?nomeEvento;\n            meo:dataEventoMusicale ?dataEvento;\n            meo:eventoInStruttura ?strutturaEvento;\n            meo:capienzaMassimaEventoMusicale ?capienzaMassimaEvento.\n    ?artista meo:agentePartecipaEvento ?evento.\n    }\n    union\n    {\n            ?artista rdf:type meo:Artista;\n             meo:nomeAgenteMusicale ?nomeArtista.\n    FILTER regex(?nomeArtista, \"` + artistName + `\").\n    ?evento rdf:type meo:EventoMusicale;\n            meo:nomeEventoMusicale ?nomeEvento;\n            meo:dataEventoMusicale ?dataEvento;\n            meo:eventoInStruttura ?strutturaEvento;\n            meo:capienzaMassimaEventoMusicale ?capienzaMassimaEvento.\n    ?artista meo:membroBandPartecipaEvento ?evento.\n    }\n} limit 100\n      `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.artistsevents = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n    async findGenreAndLabel(artistName) {\n      this.genres = [];\n\n      //Costruisco la query\n      const query = `\nPREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX       wdt:  <http://www.wikidata.org/prop/direct/>\nPREFIX        wd:  <http://www.wikidata.org/entity/>\nPREFIX  wikibase:  <http://wikiba.se/ontology#>\nPREFIX        bd:  <http://www.bigdata.com/rdf#>\n\nselect distinct ?etichettaGenere\nwhere {\n            ?artista rdf:type meo:AgenteMusicale;\n             meo:nomeAgenteMusicale ?nomeArtista.\n    FILTER regex(?nomeArtista, \"` + artistName + `\").\n    service <https://query.wikidata.org/sparql> {\n        ?artista wdt:P264 ?etichetta;\n        \twdt:P136 ?genere.\n        SERVICE wikibase:label {\n            bd:serviceParam wikibase:language \"it\".\n            ?etichetta rdfs:label ?label.\n            ?genere rdfs:label ?etichettaGenere\n        }\n    }\n} limit 100\n      `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.genres = await this.$root.$refs.HelloWorld.makeQuery(query);\n\n      this.labels = [];\n\n      const query1 = `\nPREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX       wdt:  <http://www.wikidata.org/prop/direct/>\nPREFIX        wd:  <http://www.wikidata.org/entity/>\nPREFIX  wikibase:  <http://wikiba.se/ontology#>\nPREFIX        bd:  <http://www.bigdata.com/rdf#>\n\nselect distinct ?label\nwhere {\n            ?artista rdf:type meo:AgenteMusicale;\n             meo:nomeAgenteMusicale ?nomeArtista.\n    FILTER regex(?nomeArtista, \"` + artistName + `\").\n    service <https://query.wikidata.org/sparql> {\n        ?artista wdt:P264 ?etichetta;\n        \twdt:P136 ?genere.\n        SERVICE wikibase:label {\n            bd:serviceParam wikibase:language \"it\".\n            ?etichetta rdfs:label ?label.\n            ?genere rdfs:label ?etichettaGenere\n        }\n    }\n} limit 100\n      `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.labels = await this.$root.$refs.HelloWorld.makeQuery(query1);\n\n    },\n\n    async findLiveEventsWD(artistName) {\n      this.artistseventswd = [];\n\n      //Costruisco la query\n      const query = `\nPREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX       wdt:  <http://www.wikidata.org/prop/direct/>\nPREFIX        wd:  <http://www.wikidata.org/entity/>\nPREFIX  wikibase:  <http://wikiba.se/ontology#>\nPREFIX        bd:  <http://www.bigdata.com/rdf#>\n\nselect ?nomeArtista ?nomeEvento\nwhere {\n            ?artista rdf:type meo:AgenteMusicale;\n             meo:nomeAgenteMusicale ?nomeArtista.\n    FILTER regex(?nomeArtista, \"` + artistName + `\").\n    service <https://query.wikidata.org/sparql> {\n        ?artista wdt:P1344 ?evento.\n        SERVICE wikibase:label {\n            bd:serviceParam wikibase:language \"it\".\n            ?evento rdfs:label ?nomeEvento.\n        }\n    }\n} limit 100\n      `;\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.artistseventswd = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]}]}