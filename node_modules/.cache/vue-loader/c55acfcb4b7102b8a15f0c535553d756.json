{"remainingRequest":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Scalette.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/src/components/Scalette.vue","mtime":1640020329636},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/GIT/Progetto-ModeSem/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7QkNvbnRhaW5lciwgQlJvdywgQkNvbH0gZnJvbSAiYm9vdHN0cmFwLXZ1ZSI7Cgpjb25zdCBTcGFycWxDbGllbnQgPSByZXF1aXJlKCdzcGFycWwtaHR0cC1jbGllbnQnKQpjb25zdCBlbmRwb2ludFVybCA9ICdodHRwOi8vbG9jYWxob3N0OjcyMDAvcmVwb3NpdG9yaWVzL01FTycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2NhbGV0dGUiLAoKICBjb21wb25lbnRzOiB7CiAgICAvL0JCdXR0b24sCiAgICBCQ29udGFpbmVyLCBCUm93LCBCQ29sCiAgfSwKCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgZXZlbnRTZWxlY3RlZDogbnVsbCwKICAgICAgYWxsRXZlbnRzOiBbXSwKICAgICAgYXJ0aXN0c0xvYWRlZDogZmFsc2UsCiAgICAgIGFsbExvYWRlZDogZmFsc2UsCiAgICAgIGV2ZW50czogW10sCiAgICAgIHN0YXR1czogJ25vdF9zZWxlY3RlZCcsCiAgICB9CiAgfSwKCiAgYXN5bmMgbW91bnRlZCgpIHsKCiAgICBjb25zdCBxdWVyeSA9IGAKICAgICAgUFJFRklYIG1lbzogPGh0dHA6Ly93d3cubW9kc2VtLm9yZy9tdXNpY2FsRXZlbnRzT250b2xvZ3kjPgogICAgICBQUkVGSVggcmRmOiA8aHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIz4KICAgICAgUFJFRklYIG93bDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDIvMDcvb3dsIz4KICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPgogICAgICBQUkVGSVggeHNkOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEjPgoKICAgICAgc2VsZWN0ID9ub21lRXZlbnRvCiAgICAgIHdoZXJlIHsKICAgICAgICAgID9ldmVudG8gcmRmOnR5cGUgbWVvOkV2ZW50b011c2ljYWxlOwogICAgICAgICAgICAgICAgICBtZW86bm9tZUV2ZW50b011c2ljYWxlID9ub21lRXZlbnRvLgogICAgICB9IGxpbWl0IDEwMAogICAgYDsKCiAgICBjb25zdCBjbGllbnQgPSBuZXcgU3BhcnFsQ2xpZW50KHtlbmRwb2ludFVybH0pCiAgICBjb25zdCBzdHJlYW0gPSBhd2FpdCBjbGllbnQucXVlcnkuc2VsZWN0KHF1ZXJ5KQoKICAgIHZhciBzZWxmID0gdGhpczsKCiAgICBzdHJlYW0ub24oJ2RhdGEnLCByb3cgPT4gewogICAgICBjb25zb2xlLmxvZyhyb3cpOwogICAgICBPYmplY3QuZW50cmllcyhyb3cpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4gewoKICAgICAgICB2YXIgYXJ0aXN0TmFtZSA9IHZhbHVlLnZhbHVlLnJlcGxhY2UoJ2h0dHA6Ly93d3cubW9kc2VtLm9yZy9tdXNpY2FsRXZlbnRzT250b2xvZ3kjJywgJycpOwoKICAgICAgICBzZWxmLmFsbEV2ZW50cy5wdXNoKHt2YWx1ZTogYXJ0aXN0TmFtZSwgdGV4dDogYXJ0aXN0TmFtZX0pOwoKICAgICAgICBjb25zb2xlLmxvZyhgJHtrZXl9OiAke3ZhbHVlLnZhbHVlfSAoJHt2YWx1ZS50ZXJtVHlwZX0pYCkKICAgICAgfSkKCiAgICAgIHNlbGYuYXJ0aXN0c0xvYWRlZCA9IHRydWU7CiAgICB9KQoKICAgIHN0cmVhbS5vbignZXJyb3InLCBlcnIgPT4gewogICAgICBjb25zb2xlLmVycm9yKGVycikKICAgIH0pCiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgZmluZExpdmVFdmVudHMoZXZlbnROYW1lKSB7CiAgICAgIHRoaXMuZXZlbnRzID0gW107CgogICAgICB2YXIgcXVlcnkgPSAiIjsKCiAgICAgICAgcXVlcnkgPSBgCiAgICAgICAgUFJFRklYIG1lbzogPGh0dHA6Ly93d3cubW9kc2VtLm9yZy9tdXNpY2FsRXZlbnRzT250b2xvZ3kjPgogICAgICAgIFBSRUZJWCByZGY6IDxodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjPgogICAgICAgIFBSRUZJWCBvd2w6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCM+CiAgICAgICAgUFJFRklYIHJkZnM6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAwLzAxL3JkZi1zY2hlbWEjPgogICAgICAgIFBSRUZJWCB4c2Q6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSM+CiAgICAgICAgUFJFRklYIG93cDogPGh0dHA6Ly93d3cub250b2xvZ3lkZXNpZ25wYXR0ZXJucy5vcmcvY3Avb3dsL2JhZy5vd2wjPgoKCiAgICAgICAgc2VsZWN0ID90aXRvbG9DYW56b25lID9ub21lRXZlbnRvCiAgICAgICAgd2hlcmUgewogICAgICAgICAgICA/ZXZlbnRvICByZGY6dHlwZSBtZW86RXZlbnRvTXVzaWNhbGU7CiAgICAgICAgICAgICAgICAgICAgIG1lbzpub21lRXZlbnRvTXVzaWNhbGUgP25vbWVFdmVudG87CiAgICAgICAgICAgICAgICAgICAgIG1lbzpoYVNjYWxldHRhID9zY2FsZXR0YS4KICAgICAgICAgICAgP3NjYWxldHRhIHJkZjp0eXBlIG1lbzpTY2FsZXR0YTsKICAgICAgICAgICAgICAgICBvd3A6aGFzSXRlbSA/YnJhbm8uCiAgICAgICAgICAgID9icmFubyByZGY6dHlwZSBtZW86QnJhbm9NdXNpY2FsZTsKICAgICAgICAgICAgICAgICAgIG1lbzpjb250aWVuZUNhbnpvbmUgP2NhbnpvbmUuCiAgICAgICAgICAgID9jYW56b25lIHJkZjp0eXBlIG1lbzpDYW56b25lOwogICAgICAgICAgICAgICAgICAgIG1lbzp0aXRvbG9DYW56b25lID90aXRvbG9DYW56b25lLgogICAgICAgICAgICBGSUxURVIgcmVnZXgoP25vbWVFdmVudG8sICJgICsgZXZlbnROYW1lICsgYCIpLgogICAgICAgIH0gbGltaXQgMTAwYDsKCiAgICAgIC8vQ29zdHJ1aXNjbyBsYSBxdWVyeQoKICAgICAgLy9DaGlhbW8gaWwgbWV0b2RvIGNoZSBlc2VndWUgbGEgcXVlcnk6IHNpdHVhdG8gbmVsIGNvbXBvbmVudCBwcmluY2lwYWxlCiAgICAgIHRoaXMuZXZlbnRzID0gYXdhaXQgdGhpcy4kcm9vdC4kcmVmcy5IZWxsb1dvcmxkLm1ha2VRdWVyeShxdWVyeSk7CiAgICB9LAogIH0KfQoK"},{"version":3,"sources":["Scalette.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"Scalette.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"m-3\">\n    <div v-if=\"artistsLoaded\">\n      <!--\n      <b-form-select v-model=\"eventSelected\" :options=\"allEvents\"></b-form-select>\n      <div class=\"mt-3\">Selected: <strong>{{ eventSelected }}</strong></div>\n      <div>\n        <b-button variant=\"primary\" @click=\"findLiveEvents()\">Trova eventi Live dell'artista</b-button>\n      </div>-->\n      <h3>Scalette degli eventi</h3>\n\n\n      <b-container class=\"bv-example-row\">\n        <b-row class=\"text-center\">\n          <b-col cols=\"3\">\n            <b-list-group>\n              <b-list-group-item v-for=\"(elem, index) in allEvents\" :key=\"index\" @click=\"findLiveEvents(elem.value)\" button>{{ elem.value }}</b-list-group-item>\n            </b-list-group>\n          </b-col>\n          <b-col cols=\"9\">\n              <div v-if=\"events.length > 0\">\n                <b-table striped hover :items=\"events\"></b-table>\n              </div>\n            <div v-else>\n              <h5>L'evento non ha nessuna canzone in scaletta</h5>\n            </div>\n          </b-col>\n        </b-row>\n      </b-container>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {BContainer, BRow, BCol} from \"bootstrap-vue\";\n\nconst SparqlClient = require('sparql-http-client')\nconst endpointUrl = 'http://localhost:7200/repositories/MEO'\n\nexport default {\n  name: \"Scalette\",\n\n  components: {\n    //BButton,\n    BContainer, BRow, BCol\n  },\n\n  data: function () {\n    return {\n      eventSelected: null,\n      allEvents: [],\n      artistsLoaded: false,\n      allLoaded: false,\n      events: [],\n      status: 'not_selected',\n    }\n  },\n\n  async mounted() {\n\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select ?nomeEvento\n      where {\n          ?evento rdf:type meo:EventoMusicale;\n                  meo:nomeEventoMusicale ?nomeEvento.\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    var self = this;\n\n    stream.on('data', row => {\n      console.log(row);\n      Object.entries(row).forEach(([key, value]) => {\n\n        var artistName = value.value.replace('http://www.modsem.org/musicalEventsOntology#', '');\n\n        self.allEvents.push({value: artistName, text: artistName});\n\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n\n      self.artistsLoaded = true;\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    async findLiveEvents(eventName) {\n      this.events = [];\n\n      var query = \"\";\n\n        query = `\n        PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX owl: <http://www.w3.org/2002/07/owl#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n        PREFIX owp: <http://www.ontologydesignpatterns.org/cp/owl/bag.owl#>\n\n\n        select ?titoloCanzone ?nomeEvento\n        where {\n            ?evento  rdf:type meo:EventoMusicale;\n                     meo:nomeEventoMusicale ?nomeEvento;\n                     meo:haScaletta ?scaletta.\n            ?scaletta rdf:type meo:Scaletta;\n                 owp:hasItem ?brano.\n            ?brano rdf:type meo:BranoMusicale;\n                   meo:contieneCanzone ?canzone.\n            ?canzone rdf:type meo:Canzone;\n                    meo:titoloCanzone ?titoloCanzone.\n            FILTER regex(?nomeEvento, \"` + eventName + `\").\n        } limit 100`;\n\n      //Costruisco la query\n\n      //Chiamo il metodo che esegue la query: situato nel component principale\n      this.events = await this.$root.$refs.HelloWorld.makeQuery(query);\n    },\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>"]}]}