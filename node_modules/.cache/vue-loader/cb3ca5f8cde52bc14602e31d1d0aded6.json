{"remainingRequest":"/Volumes/DATI/client_modsem/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/DATI/client_modsem/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/DATI/client_modsem/src/components/HelloWorld.vue","mtime":1639863509824},{"path":"/Volumes/DATI/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/client_modsem/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Volumes/DATI/client_modsem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/DATI/client_modsem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQge0JCdXR0b259IGZyb20gJ2Jvb3RzdHJhcC12dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIZWxsb1dvcmxkJywKICBwcm9wczogewogICAgbXNnOiBTdHJpbmcsCiAgfSwKCiAgY29tcG9uZW50czogewogICAgQkJ1dHRvbiwKICB9LAoKICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gewogICAgICBwYWdlOiAwCiAgICB9CiAgfSwKCiAgYXN5bmMgbW91bnRlZCgpIHsKCiAgICAvKgogICAgdmFyIHF1ZXJ5ID0gInNlbGVjdCA/YXJ0aXN0YSB3aGVyZSB7ID9hcnRpc3RhIHJkZjp0eXBlIG1lbzpBcnRpc3RhIH0gbGltaXQgMTAwIjsKCiAgICBjb25zdCBteUZldGNoZXIgPSBuZXcgU3BhcnFsRW5kcG9pbnRGZXRjaGVyKHsKICAgICAgbWV0aG9kOiAnR0VUJywgICAgICAgICAgICAgICAgICAgLy8gQSBjdXN0b20gSFRUUCBtZXRob2QgZm9yIGlzc3VpbmcgKG5vbi11cGRhdGUpIHF1ZXJpZXMsIGRlZmF1bHRzIHRvIFBPU1QuIFVwZGF0ZSBxdWVyaWVzIGFyZSBhbHdheXMgaXNzdWVkIHZpYSBQT1NULgogICAgICBmZXRjaDogZmV0Y2gsICAgICAgICAgICAgICAgICAgICAgLy8gQSBjdXN0b20gZmV0Y2gtQVBJLXN1cHBvcnRpbmcgZnVuY3Rpb24KICAgICAgcHJlZml4VmFyaWFibGVRdWVzdGlvbk1hcms6IGZhbHNlIC8vIElmIHZhcmlhYmxlIG5hbWVzIGluIGJpbmRpbmdzIHNob3VsZCBiZSBwcmVmaXhlZCB3aXRoICc/JywgZGVmYXVsdHMgdG8gZmFsc2UKICAgIH0pOwoKICAgIGNvbnN0IHRyaXBsZVN0cmVhbSA9IGF3YWl0IG15RmV0Y2hlci5mZXRjaFRyaXBsZXMoJ2h0dHA6Ly9sb2NhbGhvc3Q6NzIwMC9zcGFycWwnLCBxdWVyeSk7CiAgICB0cmlwbGVTdHJlYW0ub24oJ2RhdGEnLCAodHJpcGxlKSA9PiBjb25zb2xlLmxvZyh0cmlwbGUpKTsKCiAgICAgKi8KCiAgICBjb25zdCBTcGFycWxDbGllbnQgPSByZXF1aXJlKCdzcGFycWwtaHR0cC1jbGllbnQnKQoKICAgIGNvbnN0IGVuZHBvaW50VXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NzIwMC9yZXBvc2l0b3JpZXMvTXVzaWNhbEV2ZW50c09udG9sb2d5JwogICAgY29uc3QgcXVlcnkgPSBgCiAgICAgIFBSRUZJWCBtZW86IDxodHRwOi8vd3d3Lm1vZHNlbS5vcmcvbXVzaWNhbEV2ZW50c09udG9sb2d5Iz4KICAgICAgUFJFRklYIHJkZjogPGh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyM+CiAgICAgIFBSRUZJWCBvd2w6IDxodHRwOi8vd3d3LnczLm9yZy8yMDAyLzA3L293bCM+CiAgICAgIFBSRUZJWCByZGZzOiA8aHR0cDovL3d3dy53My5vcmcvMjAwMC8wMS9yZGYtc2NoZW1hIz4KICAgICAgUFJFRklYIHhzZDogPGh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIz4KCiAgICAgIHNlbGVjdCA/YXJ0aXN0YQogICAgICB3aGVyZSB7CiAgICAgID9hcnRpc3RhIHJkZjp0eXBlIG1lbzpBcnRpc3RhCiAgICAgIH0gbGltaXQgMTAwCiAgICBgOwoKICAgIGNvbnN0IGNsaWVudCA9IG5ldyBTcGFycWxDbGllbnQoe2VuZHBvaW50VXJsfSkKICAgIGNvbnN0IHN0cmVhbSA9IGF3YWl0IGNsaWVudC5xdWVyeS5zZWxlY3QocXVlcnkpCgogICAgc3RyZWFtLm9uKCdkYXRhJywgcm93ID0+IHsKICAgICAgT2JqZWN0LmVudHJpZXMocm93KS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhgJHtrZXl9OiAke3ZhbHVlLnZhbHVlfSAoJHt2YWx1ZS50ZXJtVHlwZX0pYCkKICAgICAgfSkKICAgIH0pCgogICAgc3RyZWFtLm9uKCdlcnJvcicsIGVyciA9PiB7CiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKQogICAgfSkKICB9LAoKICBtZXRob2RzOiB7CiAgICBjaGFuZ2VQYWdlKHBhZ2UpIHsKICAgICAgdGhpcy5wYWdlID0gcGFnZTsKICAgICAgY29uc29sZS5sb2codGhpcy5wYWdlKTsKICAgIH0KICB9CgoKfQo="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-navbar type=\"dark\" variant=\"dark\">\n      <b-navbar-nav>\n        <b-nav-item :on-click=\"changePage(0)\">Home</b-nav-item>\n        <b-nav-item :on-click=\"changePage(1)\">Artisti</b-nav-item>\n        <b-nav-item :on-click=\"changePage(2)\">Eventi Live</b-nav-item>\n\n        <!-- Navbar dropdowns -->\n        <!--\n        <b-nav-item-dropdown text=\"Lang\" right>\n          <b-dropdown-item href=\"#\">EN</b-dropdown-item>\n          <b-dropdown-item href=\"#\">ES</b-dropdown-item>\n          <b-dropdown-item href=\"#\">RU</b-dropdown-item>\n          <b-dropdown-item href=\"#\">FA</b-dropdown-item>\n        </b-nav-item-dropdown>\n        -->\n\n        <b-nav-item-dropdown text=\"User\" right>\n          <b-dropdown-item href=\"#\">Account</b-dropdown-item>\n          <b-dropdown-item href=\"#\">Settings</b-dropdown-item>\n        </b-nav-item-dropdown>\n      </b-navbar-nav>\n    </b-navbar>\n\n    <div>\n      <b-button>Button</b-button>\n      <b-button variant=\"danger\">Button</b-button>\n      <b-button variant=\"success\">Button</b-button>\n      <b-button variant=\"outline-primary\">Button</b-button>\n    </div>\n\n    <div v-if=\"this.page === 0\">\n      Homepage\n    </div>\n    <div v-else-if=\"this.page === 1\">\n      Artisti\n    </div>\n    <div v-else-if=\"this.page === 2\">\n      Eventi Live\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport {BButton} from 'bootstrap-vue';\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String,\n  },\n\n  components: {\n    BButton,\n  },\n\n  data: function () {\n    return {\n      page: 0\n    }\n  },\n\n  async mounted() {\n\n    /*\n    var query = \"select ?artista where { ?artista rdf:type meo:Artista } limit 100\";\n\n    const myFetcher = new SparqlEndpointFetcher({\n      method: 'GET',                   // A custom HTTP method for issuing (non-update) queries, defaults to POST. Update queries are always issued via POST.\n      fetch: fetch,                     // A custom fetch-API-supporting function\n      prefixVariableQuestionMark: false // If variable names in bindings should be prefixed with '?', defaults to false\n    });\n\n    const tripleStream = await myFetcher.fetchTriples('http://localhost:7200/sparql', query);\n    tripleStream.on('data', (triple) => console.log(triple));\n\n     */\n\n    const SparqlClient = require('sparql-http-client')\n\n    const endpointUrl = 'http://localhost:7200/repositories/MusicalEventsOntology'\n    const query = `\n      PREFIX meo: <http://www.modsem.org/musicalEventsOntology#>\n      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n      PREFIX owl: <http://www.w3.org/2002/07/owl#>\n      PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n      PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\n      select ?artista\n      where {\n      ?artista rdf:type meo:Artista\n      } limit 100\n    `;\n\n    const client = new SparqlClient({endpointUrl})\n    const stream = await client.query.select(query)\n\n    stream.on('data', row => {\n      Object.entries(row).forEach(([key, value]) => {\n        console.log(`${key}: ${value.value} (${value.termType})`)\n      })\n    })\n\n    stream.on('error', err => {\n      console.error(err)\n    })\n  },\n\n  methods: {\n    changePage(page) {\n      this.page = page;\n      console.log(this.page);\n    }\n  }\n\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"]}]}